# Brain Tumor Detection using CNN: Achieving 98% Accuracy with TensorFlow ðŸ§ ðŸ”¥ðŸ”’

Experience the power of deep learning with our repository! We present a comprehensive implementation of a brain tumor detection model using Convolutional Neural Networks (CNNs) in TensorFlow. Achieving an impressive accuracy of 98%, our code showcases the following steps:

## 1. Importing Essential Libraries: âœ…
Start by importing necessary libraries for data manipulation, visualization, and model construction with TensorFlow.

## 2. Setting Up Dataset Paths and Directories: âœ…
Define the dataset path and training/testing directories, and establish the categories for brain tumor types.

## 3. Loading and Preprocessing the Dataset: âœ…
Read images from each category in the training directory, create a DataFrame to store image data, and visualize the distribution of tumor types.

## 4. Visualizing Images for Each Tumor Type: âœ…
Display sample images for each tumor type in a grid of subplots.

## 5. Setting Image Size, Batch Size, and Epochs: âœ…
Define image dimensions, batch size for training, and the number of training epochs.

## 6. Building the Model Architecture: âœ…
Construct a CNN model with convolutional, max pooling, dense, and dropout layers. Compile the model using the Adam optimizer and categorical cross-entropy loss.

## 7. Training and Validation: âœ…
Monitor the training and validation process to prevent overfitting and ensure robust model performance.

## 8. Model Evaluation: âœ…
Assess the performance of the model on the test dataset to measure accuracy and other key metrics.

## Results: ðŸŒŸ Achieved 98% accuracy on the test set!

